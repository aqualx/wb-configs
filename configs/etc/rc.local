#!/bin/sh
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

# Wiren board

wb_firstboot()
{
    if [ ! -d "/var/lib/wirenboard/" ]; then
	mkdir /var/lib/wirenboard/
    fi

    echo "Regenerating SSH host keys"
    echo "y\n" | ssh-keygen -f /etc/ssh/ssh_host_ecdsa_key -N '' -t ecdsa || return 1
    echo 'y\n'| ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa || return 2
    echo 'y\n'| ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa || return 3

    echo "Get WB serial number"
    wb-gen-serial > /var/lib/wirenboard/serial.conf || return 4

    echo "Restarting up network interface"
    if [ -e /etc/init.d/netplug ]; then
        /etc/init.d/netplug stop
    fi

    ifdown eth0 ; ifdown eth0 ; ifup eth0

    if [ -e /etc/init.d/netplug ]; then
        /etc/init.d/netplug start
    fi

    echo "Resizing root partition and create swap..."
    SWAP_SECTORS=524288  # 256 MB
    TOTAL_SECTORS=`fdisk -b 512 -l /dev/mmcblk0 | grep -oP "total \K[0-9]+(?= sectors)"`
    ROOT_FIRST_SECTOR=`fdisk -b 512 -l /dev/mmcblk0 | grep "/dev/mmcblk0p2" | awk '{print $2}'`
    ROOT_LAST_SECTOR=$(($TOTAL_SECTORS-1-$SWAP_SECTORS))
    SWAP_FIRST_SECTOR=$(($ROOT_LAST_SECTOR+1))

    ROOT_SIZE_SECTORS=$(($ROOT_LAST_SECTOR+1-$ROOT_FIRST_SECTOR))

    fdisk -b 512 /dev/mmcblk0 <<EOF
d
2
n
p
2
$ROOT_FIRST_SECTOR
$ROOT_LAST_SECTOR
n
p
3
$SWAP_FIRST_SECTOR

t
3
82
w
EOF

    return 0
}


wb_prepare_fs()
{
    partx -a /dev/mmcblk0
    echo "Creating swap filesystem..."
    mkswap /dev/mmcblk0p3
    swapon -a


    echo "Resizing root filesystem..."
    resize2fs /dev/mmcblk0p2
    return 0
}

FLAG="/var/lib/wirenboard/firstboot.flag"
if [ ! -f $FLAG ]; then
    wb_firstboot
    RC=$?
    if [ $RC -ne "0" ] ; then
	echo "Error in WB firstboot  script"
	exit $RC
    fi

    touch $FLAG

    echo "Rebooting..."
    reboot
    exit
fi

FS_FLAG="/var/lib/wirenboard/fs_ready.flag"
if [ ! -f $FS_FLAG ]; then
    wb_prepare_fs
    RC=$?
    if [ $RC -ne "0" ] ; then
        echo "Error in WB fs script"
        exit $RC
    fi

    touch $FS_FLAG

fi




exit 0
